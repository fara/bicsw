<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spring.Web</name>
    </assembly>
    <members>
        <member name="T:Spring.Web.Advice.AspNetCacheAdvice">
            <summary>
            Uses <see cref="T:System.Web.Caching.Cache"/> object as a store for cached objects.
            </summary>
            <remarks>
            <p>
            This class can only be used within ASP.NET web applications because it depends
            on a valid instance of <see cref="T:System.Web.HttpContext"/>.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: AspNetCacheAdvice.cs,v 1.2 2005/12/08 09:39:00 springboy Exp $</version>
            <seealso cref="P:System.Web.HttpContext.Cache"/>
            <seealso cref="T:System.Web.Caching.Cache"/>
        </member>
        <member name="M:Spring.Web.Advice.AspNetCacheAdvice.GetObjectFromCache(System.Object)">
            <summary>
            Retrieves an object from the cache.
            </summary>
            <remarks>
            <p>
            In the context of the <see cref="T:Spring.Web.Advice.AspNetCacheAdvice"/>
            class, the <see cref="M:System.Object.ToString"/> method of the supplied
            <paramref name="key"/> will be invoked to get an appropriate value for
            accessing the underlying <see cref="T:System.Web.Caching.Cache"/> of the
            <see cref="T:System.Web.HttpContext"/>.
            </p>
            <p>
            If the supplied <paramref name="key"/> is <see lang="null"/>, then
            this method will (silently) just return <see lang="null"/>.
            </p>
            </remarks>
            <param name="key">The cache key to use for lookup.</param>
            <returns>
            The cached object if found, else <see lang="null"/>.
            </returns>
            <seealso cref="P:System.Web.HttpContext.Cache"/>
        </member>
        <member name="M:Spring.Web.Advice.AspNetCacheAdvice.PutObjectInCache(System.Object,System.Object,Spring.Attributes.CacheAttribute)">
            <summary>
            Puts the supplied <paramref name="objectToCache"/> in the cache.
            </summary>
            <remarks>
            <p>
            In the context of the <see cref="T:Spring.Web.Advice.AspNetCacheAdvice"/>
            class, the <see cref="M:System.Object.ToString"/> method of the supplied
            <paramref name="key"/> will be invoked to get an appropriate value for
            accessing the underlying <see cref="T:System.Web.Caching.Cache"/> of the
            <see cref="T:System.Web.HttpContext"/>.
            </p>
            </remarks>
            <param name="key">
            The cache key to associate the <paramref name="objectToCache"/> with.
            </param>
            <param name="objectToCache">The object to cache.</param>
            <param name="cacheInfo">
            The caching details (expiration, sliding, etc.)
            </param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="key"/> is <see langword="null"/>.
            </exception>
            <seealso cref="P:System.Web.HttpContext.Cache"/>
        </member>
        <member name="T:Spring.Context.Support.WebApplicationContext">
            <summary>
            Web application context, taking the context definition files
            from the file system or from URLs. 
            
            Treats resource paths as web resources, when using
            IApplicationContext.GetResource. Resource paths are considered relative
            to the virtual directory.
            
            Note: In case of multiple config locations, later object definitions will
            override ones defined in earlier loaded files. This can be leveraged to
            deliberately override certain object definitions via an extra XML file.
            </summary>
            <author>Aleksandar Seovic</author>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String[])">
            <summary>
            Create a new WebApplicationContext, loading the definitions
            from the given XML resource.
            </summary>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String,System.Boolean,System.String[])">
            <summary>
            Create a new WebApplicationContext, loading the definitions
            from the given XML resource.
            </summary>
            <param name="name">The application context name.</param>
            <param name="caseSensitive">Flag specifying whether to make this context case sensitive or not.</param>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.#ctor(System.String,System.Boolean,Spring.Context.IApplicationContext,System.String[])">
            <summary>
            Create a new WebApplicationContext with the given parent,
            loading the definitions from the given XML resources.
            </summary>
            <param name="name">The application context name.</param>
            <param name="caseSensitive">Flag specifying whether to make this context case sensitive or not.</param>
            <param name="parentContext">The parent context.</param>
            <param name="configurationLocations">Names of configuration resources.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.InitObjectDefinitionReader(Spring.Objects.Factory.Xml.XmlObjectDefinitionReader)">
            <summary>
            Initializes object definition reader.
            </summary>
            <param name="objectDefinitionReader">Reader to initialize.</param>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.GetConfigurationLocations">
            <summary>
            Return an array of resource locations, referring to the XML object
            definition files that this context should be built with.
            </summary>
            <returns>an array of resource locations, or null if none</returns>
        </member>
        <member name="M:Spring.Context.Support.WebApplicationContext.CreateObjectFactory">
            <summary>
            Creates web object factory for this context using parent context's factory as a parent.
            </summary>
            <returns>Web object factory to use.</returns>
        </member>
        <member name="P:Spring.Context.Support.WebApplicationContext.Current">
            <summary>
            Returns current web application context, if one is initialized
            </summary>
        </member>
        <member name="T:Spring.Web.IO.WebResource">
            <summary>
            <see cref="T:Spring.Core.IO.IResource"/> implementation specifically
            for resources served up from a web server.
            </summary>
            <remarks>
            <p>
            Uses the <c>System.Web.HttpContext.Current.Server.MapPath</c>
            method to resolve the file name for a given resource. In all other
            respects it behaves just like the base
            <see cref="T:Spring.Core.IO.FileSystemResource"/> class.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebResource.cs,v 1.3 2005/09/11 10:54:58 springboy Exp $</version>
        </member>
        <member name="M:Spring.Web.IO.WebResource.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.IO.WebResource"/> class.
            </summary>
            <param name="resourceName">
            The name of the file system resource (on the server).
            </param>
        </member>
        <member name="M:Spring.Web.IO.WebResource.ResolveBasePathPlaceHolder(System.String,System.String)">
            <summary>
            Resolves the presence of the
            <paramref name="basePathPlaceHolder"/> value
            in the supplied <paramref name="resourceName"/> into a path.
            </summary>
            <param name="resourceName">
            The name of the resource.
            </param>
            <param name="basePathPlaceHolder">
            The string that is a placeholder for a base path.
            </param>
            <returns>
            The name of the resource with any <paramref name="basePathPlaceHolder"/>
            value having been resolved into an actual path.
            </returns>
        </member>
        <member name="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition">
            <summary>
            Web object definitions extend <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/>
            by adding scope property.
            </summary>
            <remarks>
            <p>
            This is the most common type of object definition in ASP.Net web applications
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: ChildWebObjectDefinition.cs,v 1.5 2005/08/24 01:28:13 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Objects.Factory.Support.IWebObjectDefinition">
            <summary>
            Defines additional members web object definitions need to implement.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: IWebObjectDefinition.cs,v 1.1 2005/01/19 10:26:16 aseovic Exp $</version>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.Scope">
            <summary>
            Gets or sets scope for the web object (application, session or request)
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page. 
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.IWebObjectDefinition.PageName">
            <summary>
            Returns name of the .aspx file if object represents a page.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.Type,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="type">The class of the object to instantiate.</param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.String,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="typeName">The class name of the object to instantiate.</param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.#ctor(System.String,System.String,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.ChildWebObjectDefinition"/> class
            for an .aspx page, providing property values.
            </summary>
            <param name="parentName">Name of the parent object definition.</param>
            <param name="pageName">Name of the .aspx page to instantiate.</param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.ChildWebObjectDefinition.ToString">
            <summary>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.Scope">
            <summary>
            Object scope.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page. 
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.PageName">
            <summary>
            Gets the name of the .aspx page, if object definition represents page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.ChildWebObjectDefinition.IsSingleton">
            <summary>
            Forces ASP pages to be treated as prototypes all the time inorder to comply with ASP.Net requirements.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Support.ObjectScope">
            <summary>
            The possible object scope values.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: ObjectScope.cs,v 1.3 2005/06/23 22:24:56 springboy Exp $</version>
        </member>
        <member name="F:Spring.Objects.Factory.Support.ObjectScope.Application">
            <summary>
            Application scope.
            </summary>
        </member>
        <member name="F:Spring.Objects.Factory.Support.ObjectScope.Session">
            <summary>
            Session scope.
            </summary>
        </member>
        <member name="F:Spring.Objects.Factory.Support.ObjectScope.Request">
            <summary>
            Request scope.
            </summary>
        </member>
        <member name="F:Spring.Objects.Factory.Support.ObjectScope.Default">
            <summary>
            Default scope (currently
            <see cref="F:Spring.Objects.Factory.Support.ObjectScope.Application"/>).
            </summary>
            <seealso cref="F:Spring.Objects.Factory.Support.ObjectScope.Application"/>
        </member>
        <member name="T:Spring.Objects.Factory.Support.RootWebObjectDefinition">
            <summary>
            Web object definitions extend <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/>
            by adding scope property.
            </summary>
            <remarks>
            <p>
            This is the most common type of object definition in ASP.Net web applications
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: RootWebObjectDefinition.cs,v 1.5 2005/12/26 08:15:35 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.Type,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="type">
            The class of the object to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.String,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootObjectDefinition"/> class
            for a singleton, providing property values and constructor arguments.
            </summary>
            <param name="typeName">
            The assembly qualified <see cref="P:System.Type.FullName"/> of the object to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
            <param name="arguments">
            The <see cref="T:Spring.Objects.Factory.Config.ConstructorArgumentValues"/>
            to be applied to a new instance of the object.
            </param>
            <remarks>
            <p>
            Takes an object class name to avoid eager loading of the object class.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(System.String,Spring.Objects.MutablePropertyValues)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootWebObjectDefinition"/> class
            for an .aspx page, providing property values.
            </summary>
            <param name="pageName">
            Name of the .aspx page to instantiate.
            </param>
            <param name="properties">
            The <see cref="T:Spring.Objects.MutablePropertyValues"/> to be applied to
            a new instance of the object.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.#ctor(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.RootWebObjectDefinition"/> class
            </summary>
            <param name="other">
            The definition that is to be copied.
            </param>
            <remarks>
            <p>
            Deep copy constructor.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.OverrideFrom(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Overrides this object's values using values from <c>other</c> argument.
            </summary>
            <param name="other">The object to copy values from.</param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.RootWebObjectDefinition.ToString">
            <summary>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current
            <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.Scope">
            <summary>
            Object scope.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.IsPage">
            <summary>
            Returns true if web object is .aspx page. 
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.PageName">
            <summary>
            Gets the name of the .aspx page, if object definition represents a page.
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.RootWebObjectDefinition.IsSingleton">
            <summary>
            Forces ASP pages to be treated as prototypes all the time inorder to comply with ASP.Net requirements.
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebInstantiationStrategy">
            <summary>
            Object instantiation strategy for use in
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/>.
            </summary>
            <remarks>
            <p>
            This strategy checks if objects id ASP.Net page and if it is uses
            PageParser to compile and instantiate page instance. Otherwise it
            delagates call to its parent.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebInstantiationStrategy.cs,v 1.4 2005/01/28 09:42:08 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebInstantiationStrategy.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebInstantiationStrategy"/> class.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebInstantiationStrategy.Instantiate(Spring.Objects.Factory.Support.RootObjectDefinition,System.String,Spring.Objects.Factory.IObjectFactory)">
            <summary>
            Instantiate an instance of the object described by the supplied
            <paramref name="definition"/> from the supplied <paramref name="factory"/>.
            </summary>
            <param name="definition">
            The definition of the object that is to be instantiated.
            </param>
            <param name="name">
            The name associated with the object definition. The name can be the null
            or zero length string if we're autowiring an object that doesn't belong
            to the supplied <paramref name="factory"/>.
            </param>
            <param name="factory">
            The owning <see cref="T:Spring.Objects.Factory.IObjectFactory"/>
            </param>
            <returns>
            An instance of the object described by the supplied
            <paramref name="definition"/> from the supplied <paramref name="factory"/>.
            </returns>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebObjectDefinitionFactory">
            <summary>
            Custom implementation of <see cref="T:Spring.Objects.Factory.IObjectDefinitionFactory"/>
            for web applications.
            </summary>
            <remarks>
            <p>
            This implementation adds support for .aspx pages and scoped objects.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebObjectDefinitionFactory.cs,v 1.1 2005/01/19 10:26:16 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectDefinitionFactory.CreateObjectDefinition(System.String,System.String,Spring.Objects.Factory.Config.ConstructorArgumentValues,Spring.Objects.MutablePropertyValues,System.AppDomain)">
            <summary>
            Creates web object definition. 
            </summary>
            <remarks>
            <p>
            This method creates object definitions that take into account scope attribute 
            in addition to behavior inherited from default object definitions.
            </p>
            <p>
            It also checks if specified class is .aspx page and handles that special case properly.
            </p>
            </remarks>
            <param name="typeName">Name od the type or ASPX page to create definition for</param>
            <param name="parent">Parent object definition's Id.</param>
            <param name="arguments">Constructor arguments.</param>
            <param name="properties">Property values.</param>
            <param name="domain">Application domain to use for type resolution.</param>
            <returns>Object definition.</returns>
        </member>
        <member name="T:Spring.Objects.Factory.Support.WebObjectFactory">
            <summary>
            Concrete implementation of
            <see cref="T:Spring.Objects.Factory.IListableObjectFactory"/> that knows 
            how to handle <see cref="T:Spring.Objects.Factory.Support.IWebObjectDefinition"/>s.
            </summary>
            <remarks>
            <p>
            This class should only be used within the context of an ASP.NET web application.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebObjectFactory.cs,v 1.8 2006/02/22 11:15:27 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/> class.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.#ctor(Spring.Objects.Factory.IObjectFactory)">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Support.WebObjectFactory"/> class.
            </summary>
            <param name="parentFactory">
            The parent object factory.
            </param>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateRootObjectDefinition(Spring.Objects.Factory.Config.IObjectDefinition)">
            <summary>
            Creates the root object definition.
            </summary>
            <param name="templateDefinition">The template definition.</param>
            <returns>Root object definition.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.FindObjectInCache(System.String)">
            <summary>
            Tries to find cached object for the specified name. 
            </summary>
            <remarks>
            This implementation tries to find object first in the Request scope,
            then in the Session scope and finally in the Application scope.
            </remarks>
            <param name="objectName">Object name to look for.</param>
            <returns>Cached object if found, null otherwise.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.CreateAndCacheSingletonInstance(System.String,Spring.Objects.Factory.Support.RootObjectDefinition,System.Object[])">
            <summary>
            Creates a singleton instance for the specified object name and definition.
            </summary>
            <param name="objectName">
            The object name (will be used as the key in the singleton cache key).
            </param>
            <param name="objectDefinition">The object definition.</param>
            <param name="arguments">
            The arguments to use if creating a prototype using explicit arguments to
            a static factory method. It is invalid to use a non-null arguments value
            in any other case.
            </param>
            <returns>The created object instance.</returns>
        </member>
        <member name="M:Spring.Objects.Factory.Support.WebObjectFactory.GetObjectKey(System.String)">
            <summary>
            Creates hopefully unique key for the scope based on object name.
            </summary>
            <param name="name">Object name.</param>
            <returns>Generated key.</returns>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Context">
            <summary>
            Convinience accessor for HttpContext
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Request">
            <summary>
            Convinience accessor for Request
            </summary>
        </member>
        <member name="P:Spring.Objects.Factory.Support.WebObjectFactory.Session">
            <summary>
            Convinience accessor for HttpSessionState
            </summary>
        </member>
        <member name="T:Spring.Objects.Factory.Xml.WebObjectDefinitionParser">
            <summary>
            A custom implementation of the
            <see cref="T:Spring.Objects.Factory.Xml.IXmlObjectDefinitionParser"/>
            interface that properly handles web application specific attributes,
            such as object scope.
            </summary>
            <remarks>
            <p>
            Parses object definitions according to the standard Spring.NET schema.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebObjectDefinitionParser.cs,v 1.10 2006/02/22 11:15:27 aseovic Exp $</version>
            <see cref="T:Spring.Objects.Factory.Xml.DefaultXmlObjectDefinitionParser"/>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParser.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Objects.Factory.Xml.WebObjectDefinitionParser"/> class.
            </summary>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParser.ParseObjectDefinition(System.Xml.XmlElement,System.String,Spring.Objects.Factory.Xml.XmlResourceReader)">
            <summary>
            Parses an object definition and set various web related properties
            if the definition is an <see cref="T:Spring.Objects.Factory.Support.RootWebObjectDefinition"/>.
            </summary>
            <remarks>
            <p>
            The <i>'various web related properties'</i> currently includes the
            intended scope of the object.
            </p>
            </remarks>
            <param name="element">The object definition element.</param>
            <param name="id">The id / name of the object definition.</param>
            <param name="reader">The XML resource reader to use.</param>
            <returns>The object (definition).</returns>
            <see cref="T:Spring.Objects.Factory.Support.ObjectScope"/>
            <see cref="T:Spring.Objects.Factory.Support.IWebObjectDefinition"/>
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParser.CalculateId(System.Xml.XmlElement,System.Collections.ArrayList)">
            <summary>
            Calculates an id for an object definition.
            </summary>
            <param name="element">
            The element containing the object definition.
            </param>
            <param name="aliases">
            The list of names defined for the object; may be <see lang="null"/>
            or even empty.
            </param>
            <returns>
            A calculated object definition id.
            </returns>
            <seealso cref="M:Spring.Objects.Factory.Xml.DefaultXmlObjectDefinitionParser.CalculateId(System.Xml.XmlElement,System.Collections.ArrayList)"/>.
        </member>
        <member name="M:Spring.Objects.Factory.Xml.WebObjectDefinitionParser.GetScope(System.String)">
            <summary>
            Gets the scope out of the supplied <paramref name="value"/>.
            </summary>
            <remarks>
            <p>
            If the supplied <paramref name="value"/> is invalid
            (i.e. it does not resolve to one of the 
            <see cref="T:Spring.Objects.Factory.Support.ObjectScope"/> values),
            then the return value of this method call will be
            <see cref="F:Spring.Objects.Factory.Support.ObjectScope.Default"/>;
            no exception will be raised (although the value of the invalid
            scope <paramref name="value"/> will be logged).
            </p>
            </remarks>
            <param name="value">The string containing the scope name.</param>
            <returns>The scope.</returns>
            <seealso cref="T:Spring.Objects.Factory.Support.ObjectScope"/>
        </member>
        <member name="T:Spring.Globalization.Resolvers.CookieCultureResolver">
            <summary>
            Culture resolver that uses cookie to store culture information.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: CookieCultureResolver.cs,v 1.2 2005/11/12 04:37:41 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Globalization.Resolvers.DefaultWebCultureResolver">
            <summary>
            Default culture resolver for web applications. Contains some common utility methods for web culture resolvers.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: DefaultWebCultureResolver.cs,v 1.2 2005/11/12 04:37:41 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.GetDefaultLocale">
            <summary>
            Returns default culture. If <see cref="P:Spring.Globalization.Resolvers.DefaultCultureResolver.DefaultCulture"/> property is not set, 
            it tries to get culture from the request headers
            and falls back to a current thread's culture if no headers are available.
            </summary>
            <returns>Default culture to use.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the context.
            </summary>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.DefaultWebCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Not supported for this implementation.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the request.
            </summary>
            <remarks>
            If the culture cookie doesn't exist, this method will return 
            the value of the 'Accept-Language' request header, or if no
            headers are specified, the culture of the current server thread.
            </remarks>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the culture.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="M:Spring.Globalization.Resolvers.CookieCultureResolver.CreateCookie(System.Globalization.CultureInfo)">
            <summary>
            Creates cookie for the specified culture.
            </summary>
            <param name="culture">Culture to store in a cookie.</param>
            <returns>Created cookie.</returns>
        </member>
        <member name="T:Spring.Globalization.Resolvers.RequestCultureResolver">
            <summary>
            Culture resolver that uses request headers to determine culture. If no languages
            are specified in the request headers, it returns default culture specifed, and 
            if no default culture was specifed it returns current culture for the executing 
            server thread.
            </summary>
            <remarks>
            <b>Note:</b> This culture resolver cannot be used to change the culture 
            because request headers cannot be modified. In order to change the culture
            when using this culture resolver user has to change language settings in
            the web browser.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: RequestCultureResolver.cs,v 1.2 2005/11/12 04:37:41 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Globalization.Resolvers.RequestCultureResolver.ResolveCulture">
            <summary>
            Tries to determine culture from the request headers. If no languages
            are specified in the request headers, it returns default culture specifed, and 
            if no default culture was specifed it returns current culture for the executing 
            server thread.
            </summary>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.RequestCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Not supported for this resolver implementation
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="T:Spring.Globalization.Resolvers.SessionCultureResolver">
            <summary>
            Culture resolver that uses HTTP session to store culture information.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: SessionCultureResolver.cs,v 1.1 2005/10/21 02:13:18 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Globalization.Resolvers.SessionCultureResolver.ResolveCulture">
            <summary>
            Resolves the culture from the request.
            </summary>
            <remarks>
            If culture information doesn't exist in the session, it will be created and its value will 
            be set to the value of the 'Accept-Language' request header, or if no
            headers are specified to the culture of the current server thread.
            </remarks>
            <returns>Culture that should be used to render view.</returns>
        </member>
        <member name="M:Spring.Globalization.Resolvers.SessionCultureResolver.SetCulture(System.Globalization.CultureInfo)">
            <summary>
            Sets the culture.
            </summary>
            <param name="culture">The new culture or <code>null</code> to clear the culture.</param>
        </member>
        <member name="T:Spring.Globalization.AspNetResourceCache">
            <summary>
            Resource cache implementation that uses ASP.NET <see cref="T:System.Web.Caching.Cache"/> to cache resources.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: AspNetResourceCache.cs,v 1.4 2005/12/26 08:15:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Globalization.AspNetResourceCache.GetResources(System.String)">
            <summary>
            Gets the list of resources from cache.
            </summary>
            <param name="cacheKey">Cache key to use for lookup.</param>
            <returns>A list of cached resources for the specified target object and culture.</returns>
        </member>
        <member name="M:Spring.Globalization.AspNetResourceCache.PutResources(System.String,System.Collections.IList)">
            <summary>
            Puts the list of resources in the cache.
            </summary>
            <param name="cacheKey">Cache key to use for the specified resources.</param>
            <param name="resources">A list of resources to cache.</param>
        </member>
        <member name="T:Spring.Globalization.PageStateResourceCache">
            <summary>
            Resource cache implementation that uses Spring.NET page/handler state to cache resources.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: PageStateResourceCache.cs,v 1.2 2006/02/09 07:16:57 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Globalization.PageStateResourceCache.GetResources(System.String)">
            <summary>
            Gets the list of resources from cache.
            </summary>
            <param name="cacheKey">Cache key to use for lookup.</param>
            <returns>A list of cached resources for the specified target object and culture.</returns>
        </member>
        <member name="M:Spring.Globalization.PageStateResourceCache.PutResources(System.String,System.Collections.IList)">
            <summary>
            Puts the list of resources in the cache.
            </summary>
            <param name="cacheKey">Cache key to use for the specified resources.</param>
            <param name="resources">A list of resources to cache.</param>
        </member>
        <member name="T:Spring.Util.WebUtils">
            <summary>
            Miscellaneous web utility methods.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebUtils.cs,v 1.4 2005/09/25 10:16:01 springboy Exp $</version>
        </member>
        <member name="M:Spring.Util.WebUtils.GetPageName(System.String)">
            <summary>
            Extracts the bare ASPX page name without any extension from the
            supplied <paramref name="url"/>.
            </summary>
            <example>
            <p>
            Examples of what would be returned from this method given a url would be:
            </p>
            <p>
            <list type="bullet">
            <item><description>'Login.aspx' =&gt; 'Login'</description></item>
            <item><description>'~/Login.aspx' =&gt; 'Login'</description></item>
            <item><description>'~/B2B/SignUp.aspx' =&gt; 'SignUp'</description></item>
            <item><description>'B2B/Foo/FooServices.aspx' =&gt; 'FooServices'</description></item>
            </list>
            </p>
            </example>
            <param name="url">The full URL to the ASPX page.</param>
            <returns>
            The bare ASPX page name without any extension.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="url"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
        </member>
        <member name="M:Spring.Util.WebUtils.CreatePageInstance(System.String)">
            <summary>
            Creates an instance of the ASPX page
            referred to by the supplied <paramref name="pageName"/>.
            </summary>
            <param name="pageName">
            The filename of the ASPX page.
            </param>
            <returns>Page instance.</returns>
            <exception cref="T:Spring.Objects.Factory.ObjectCreationException">
            If this method is not called in the scope of an active web session
            (i.e. the implementation this method depends on this code executing
            in the environs of a running web server such as IIS); or if the
            page could not be instantiated (for whatever reason, such as the
            ASPX <paramref name="pageName"/> not actually existing).
            </exception>
        </member>
        <member name="M:Spring.Util.WebUtils.GetPageType(System.String)">
            <summary>
            Returns the <see cref="T:System.Type"/> of the ASPX page
            referred to by the supplied <paramref name="pageName"/>.
            </summary>
            <remarks>
            <p>
            As indicated by the exception that can be thrown by this method,
            the ASPX page referred to by the supplied <paramref name="pageName"/>
            does have to be instantiated in order to determine its 
            see cref="System.Type"/&gt;
            (<see cref="M:System.Web.UI.PageParser.GetCompiledPageInstance(System.String,System.String,System.Web.HttpContext)"/>).
            </p>
            </remarks>
            <param name="pageName">
            The filename of the ASPX page.
            </param>
            <returns>
            The <see cref="T:System.Type"/> of the ASPX page
            referred to by the supplied <paramref name="pageName"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="pageName"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
            <exception cref="T:Spring.Objects.Factory.ObjectCreationException">
            If this method is not called in the scope of an active web session
            (i.e. the implementation this method depends on this code executing
            in the environs of a running web server such as IIS); or if the
            page could not be instantiated (for whatever reason, such as the
            ASPX <paramref name="pageName"/> not actually existing).
            </exception>
        </member>
        <member name="M:Spring.Util.WebUtils.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Util.WebUtils"/> class.
            </summary>
            <remarks>
            <p>
            This is a utility class, and as such exposes no public constructors.
            </p>
            </remarks>
        </member>
        <member name="T:Spring.Web.Process.AbstractProcess">
            <summary>
            An abstract base class that defines common behavior for different process implementations.
            </summary>
        </member>
        <member name="T:Spring.Web.Process.IProcess">
            <summary>
            An interface that different process implementations need to support.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.IProcess.Start(System.String)">
            <summary>
            Starts the process.
            </summary>
            <param name="referrerUrl">Referrer URL.</param>
        </member>
        <member name="M:Spring.Web.Process.IProcess.SetView(System.String)">
            <summary>
            Resolves view for the specified view name.
            </summary>
            <param name="viewName">Name of the view to go to.</param>
        </member>
        <member name="M:Spring.Web.Process.IProcess.End">
            <summary>
            Ends the process.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.IProcess.Id">
            <summary>
            Unique ID of this process instance.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.IProcess.Controller">
            <summary>
            Controller for the component.
            </summary>
            <remarks>
            Process controller will be shared by all the views 
            that belong to this process.
            </remarks>
        </member>
        <member name="P:Spring.Web.Process.IProcess.CurrentView">
            <summary>
            Gets the name of the current view.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.IProcess.ViewChanged">
            <summary>
            Gets the the flag that indicates if selected view 
            has changed during the current request.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ISharedStateAware">
            <summary>
            This interface should be implemented by <see cref="T:System.Web.IHttpHandler"/>s that want to 
            have access to the shared state for the handler.
            </summary>
            <remarks>
            <p>
            Shared state is very useful if you have data that needs to be shared by all instances
            of the same page (or other <see cref="T:System.Web.IHttpHandler"/>). 
            </p>
            <p>
            For example, <see cref="T:Spring.Web.UI.Page"/> class implements this interface, which allows  
            each page derived from it to cache localizalization resources and parsed data binding 
            expressions only once and then reuse the cached values, regardless of how many instances 
            of the page are created.
            </p>
            </remarks>
        </member>
        <member name="P:Spring.Web.Support.ISharedStateAware.SharedState">
            <summary>
            Gets or sets the <see cref="T:System.Collections.IDictionary"/> that should be used
            to store shared state for the <see cref="T:System.Web.IHttpHandler"/>.
            </summary>
            <value>
            The <see cref="T:System.Collections.IDictionary"/> that should be used
            to store shared state for the <see cref="T:System.Web.IHttpHandler"/>.
            </value>
        </member>
        <member name="F:Spring.Web.Process.AbstractProcess.ProcessIdParamName">
            <summary>
            Parameter name that is used for process ID.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.#ctor">
            <summary>
            Creates instance of the process and registers it with the <see cref="T:Spring.Web.Process.ProcessManager"/>.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.Start(System.String)">
            <summary>
            Starts the process.
            </summary>
            <param name="url">Process URL.</param>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.SetView(System.String)">
            <summary>
            Resolves and sets the view for the specified view name.
            </summary>
            <param name="viewName">Name of the view to go to.</param>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.End">
            <summary>
            Ends the process by unregistering it from the <see cref="T:Spring.Web.Process.ProcessManager"/>. 
            </summary>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.NavigateToStartView">
            <summary>
            Method that needs to be implemented by specific process implementations
            in order to navigate to the first view in the process.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.NavigateToCurrentView">
            <summary>
            Method that needs to be implemented by specific process implementations
            in order to navigate to the current view.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.AbstractProcess.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the request by delegating to appropriate view, which could be
            another process.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.Id">
            <summary>
            Unique ID of this component instance.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.Parent">
            <summary>
            Gets or sets the parent process.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.SharedState">
            <summary>
            Returns a thread-safe dictionary that contains state that is shared by 
            all views of this component.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.Controller">
            <summary>
            Controller for the component.
            </summary>
            <remarks>
            Process controller will be shared by all the views 
            that belong to this component.
            </remarks>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.DefaultView">
            <summary>
            Default view for the component.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.CurrentView">
            <summary>
            Gets the name of the current view.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.ViewChanged">
            <summary>
            Gets the the flag that indicates if selected view 
            has changed during the current request.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.Views">
            <summary>
            Gets a map of process views.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.ProcessUrl">
            <summary>
            Gets the process URL.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.System#Web#IHttpHandler#IsReusable">
            <summary>
            Returns true because this wrapper handler can be reused.
            Actual page is instantiated at the beginning of the ProcessRequest method.
            </summary>
        </member>
        <member name="P:Spring.Web.Process.AbstractProcess.ApplicationContext">
            <summary>
            Gets or sets the application context.
            </summary>
        </member>
        <member name="T:Spring.Web.Process.IProcessAware">
            <summary>
            Interface that should be implemented by all <see cref="T:System.Web.IHttpHandler"/>s
            that want to be aware of the <see cref="T:Spring.Web.Process.IProcess"/> they belong to. 
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: IProcessAware.cs,v 1.1 2006/03/13 11:57:48 aseovic Exp $</version>
        </member>
        <member name="P:Spring.Web.Process.IProcessAware.Process">
            <summary>
            Gets or sets a process instance.
            </summary>
        </member>
        <member name="T:Spring.Web.Process.ProcessManager">
            <summary>
            Singleton that keeps track of all active process instances.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: ProcessManager.cs,v 1.1 2006/03/13 11:57:48 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Process.ProcessManager.#ctor">
            <summary>
            Creates singleton instance.
            </summary>
        </member>
        <member name="M:Spring.Web.Process.ProcessManager.RegisterProcess(Spring.Web.Process.IProcess)">
            <summary>
            Registers process instance.
            </summary>
            <param name="process">Process instance to register.</param>
        </member>
        <member name="M:Spring.Web.Process.ProcessManager.GetProcess(System.String)">
            <summary>
            Returns process with the specified ID.
            </summary>
            <param name="id">Process ID to use for lookup.</param>
            <returns>Process with the specified ID, or <c>null</c> if process with that ID is not registered.</returns>
        </member>
        <member name="M:Spring.Web.Process.ProcessManager.UnregisterProcess(System.String)">
            <summary>
            Unregisters process with the specified ID.
            </summary>
            <param name="id">ID of the process to unregister.</param>
        </member>
        <member name="T:Spring.Web.Services.WebServiceExporter">
            <summary>
            Exports an object as a web service.
            </summary>
            <remarks>
            <p>
            The exporter will create a web service wrapper for the object that is
            to be exposed and additionally enable its configuration as a web
            service.
            </p>
            <p>
            The exported object can be either a standard .NET web service
            implementation, with methods marked using the standard
            <see cref="T:System.Web.Services.WebMethodAttribute"/>, or it can be a
            plain .NET object.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebServiceExporter.cs,v 1.12 2006/01/20 10:17:51 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.#cctor">
            <summary>
            Initializes assembly and module builder that will be used
            to dynamically create proxies for web services.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Web.Services.WebServiceExporter"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.GetObject">
            <summary>
            Return an instance (possibly shared or independent) of the object
            managed by this factory.
            </summary>
            <remarks>
            <note type="caution">
            If this method is being called in the context of an enclosing IoC container and
            returns <see langword="null"/>, the IoC container will consider this factory
            object as not being fully initialized and throw a corresponding (and most
            probably fatal) exception.
            </note>
            </remarks>
            <returns>
            An instance (possibly shared or independent) of the object managed by
            this factory.
            </returns>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.AfterPropertiesSet">
            <summary>
            Exports specified object as a web service.
            </summary>
            <exception cref="T:System.Exception">
            In the event of misconfiguration (such as failure to set an essential
            property) or if initialization fails.
            </exception>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.TargetName">
            <summary>
            Gets or sets the name of the target object that should be exposed as a web service.
            </summary>
            <value>
            The name of the target object that should be exposed as a web service.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Description">
            <summary>
            Gets or sets the description of the web service (optional).
            </summary>
            <value>
            The web service description.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Name">
            <summary>
            Gets or sets the name of the web service (optional).
            </summary>
            <remarks>
            <p>
            Defaults to the value of the exporter's object ID.
            </p>
            </remarks>
            <value>
            The web service name.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Namespace">
            <summary>
            Gets or sets the web service namespace.
            </summary>
            <value>
            The web service namespace.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Interfaces">
            <summary>
            Gets or sets the list of interfaces whose methods should be exposed as web services.
            </summary>
            <value>The interfaces.</value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.Methods">
            <summary>
            Controls which methods on the target object are to be exposed as
            web service methods.
            </summary>
            <remarks>
            <p>
            The <c>'key'</c> portion of this mapping is the (case InSenSitiVE)
            name of the method that is to be exposed; the corresponding entry
            must be a configured instance of the
            <see cref="T:System.Web.Services.WebMethodAttribute"/> class.
            </p>
            </remarks>
            <value>
            A mapping of exactly which methods on the target object are to be
            exposed as web service methods.
            </value>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.ObjectFactory">
            <summary>
            Callback that supplies the owning factory to an object instance.
            </summary>
            <value>
            Owning <see cref="T:Spring.Objects.Factory.IObjectFactory"/>
            (may not be <see langword="null"/>). The object can immediately
            call methods on the factory.
            </value>
            <remarks>
            <p>
            Invoked after population of normal object properties but before an init
            callback like <see cref="T:Spring.Objects.Factory.IInitializingObject"/>'s
            <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>
            method or a custom init-method.
            </p>
            </remarks>
            <exception cref="T:Spring.Objects.ObjectsException">
            In case of initialization errors.
            </exception>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.ObjectType">
            <summary>
            Return the <see cref="T:System.Type"/> of object that this
            <see cref="T:Spring.Objects.Factory.IFactoryObject"/> creates, or
            <see langword="null"/> if not known in advance.
            </summary>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.IsSingleton">
            <summary>
            Is the object managed by this factory a singleton or a prototype?
            </summary>
        </member>
        <member name="P:Spring.Web.Services.WebServiceExporter.ObjectName">
            <summary>
            Set the name of the object in the object factory that created this object.
            </summary>
            <value>
            The name of the object in the factory.
            </value>
            <remarks>
            <p>
            Invoked after population of normal object properties but before an init
            callback like <see cref="M:Spring.Objects.Factory.IInitializingObject.AfterPropertiesSet"/>'s
            <see cref="T:Spring.Objects.Factory.IInitializingObject"/>
            method or a custom init-method.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.WebServiceProxyTypeBuilder.CreateWebServiceAttribute(System.Type,System.Web.Services.WebServiceAttribute)">
            <summary>
            Creates WebServiceAttribute builder by copying attribute from the target class if it exists, or
            by creating a default one based on the exporter properties.
            </summary>
            <returns>WebServiceAttribute builder.</returns>
        </member>
        <member name="M:Spring.Web.Services.WebServiceExporter.WebServiceProxyTypeBuilder.CreateWebMethodAttribute(System.Reflection.MethodInfo)">
            <summary>
            Creates WebMethodAttribute to use by looking for it in the method map and on the target method.
            </summary>
            <param name="method">Target method.</param>
            <returns>WebMethodAttribute builder.</returns>
        </member>
        <member name="T:Spring.Web.Services.WebServiceHandlerFactory">
            <summary>
            An <see cref="T:System.Web.IHttpHandlerFactory"/> implementation that
            retrieves configured <c>WebService</c> objects from the Spring.NET web
            application context.
            </summary>
            <remarks>
            This handler factory uses web service name from the URL, without the extension,
            to find web service object in the Spring context.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: WebServiceHandlerFactory.cs,v 1.9 2006/04/23 21:32:56 bbaia Exp $</version>
        </member>
        <member name="M:Spring.Web.Services.WebServiceHandlerFactory.System#Web#IHttpHandlerFactory#GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Retrieves instance of the page from Spring web application context.
            </summary>
            <param name="context">current HttpContext</param>
            <param name="requestType">type of HTTP request (GET, POST, etc.)</param>
            <param name="url">requested page URL</param>
            <param name="path">translated server path for the page</param>
            <returns>instance of the configured page object</returns>
        </member>
        <member name="T:Spring.Web.Support.AbstractHandlerFactory">
            <summary>
            Provides base functionality for Spring.NET context-aware
            <see cref="T:System.Web.IHttpHandlerFactory"/> implementations.
            </summary>
            <remarks>
            <p>
            Provides derived classes with a default implementation of
            <see cref="M:System.Web.IHttpHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)"/> method.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: AbstractHandlerFactory.cs,v 1.3 2005/11/25 07:17:17 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.#ctor">
            <summary>
            Creates a new instance of the
            <see cref="T:Spring.Web.Support.AbstractHandlerFactory"/> class.
            </summary>
            <remarks>
            <p>
            This is an abstract class and as such provides no public constructors.
            </p>
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Returns an appropriate <see cref="T:System.Web.IHttpHandler"/> implementation.
            </summary>
            <param name="context">
            An instance of the <see cref="T:System.Web.HttpContext"/> class that
            provides references to intrinsic server objects.
            </param>
            <param name="requestType">
            The HTTP method of the request.
            </param>
            <param name="url">The request URL.</param>
            <param name="pathTranslated">
            The physical path of the requested resource.
            </param>
            <returns>
            A new <see cref="T:System.Web.IHttpHandler"/> object that processes
            the request.
            </returns>
        </member>
        <member name="M:Spring.Web.Support.AbstractHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables a factory to release an existing
            <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <param name="handler">
            The <see cref="T:System.Web.IHttpHandler"/> object to release.
            </param>
        </member>
        <member name="T:Spring.Web.Support.ContextMonitor">
            <summary>
            <see cref="T:System.Web.IHttpHandler"/> implementation that allows users to monitor state 
            of the Spring.NET web application context.
            </summary>
            <remarks>
            <p>
            
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: ContextMonitor.cs,v 1.1 2005/12/26 08:15:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.ContextMonitor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.ContextMonitor"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.ContextMonitor.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes HTTP request.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, <see langword="Request"/>, <see langword="Response"/>, <see langword="Session"/>, and <see langword="Server"/>)<see langword=""/> used to service HTTP requests.</param>
        </member>
        <member name="P:Spring.Web.Support.ContextMonitor.IsReusable">
            <summary>
            Gets a value indicating whether another request can use
            this <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value><c>True</c> if this handler is reusable, <c>False</c> otherwise.</value>
        </member>
        <member name="T:Spring.Web.Support.Features">
            <summary>
            Enumeration that has a flag for each feature that
            pages and user controls can use.
            </summary>
            <remarks>
            <p>
            Instance of this enumeration is cached within application state object for each page
            and user control in application and used to optimize page execution.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>            <version>$Id: Features.cs,v 1.1 2005/02/28 11:27:44 aseovic Exp $</version>
        </member>
        <member name="F:Spring.Web.Support.Features.None">
            <summary>
            None of the features are supported.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.Features.DataModel">
            <summary>
            Data model managament is supported.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.Features.DataBinding">
            <summary>
            Data binding is supported.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.Features.Localization">
            <summary>
            Localization is supported.
            </summary>
        </member>
        <member name="F:Spring.Web.Support.Features.All">
            <summary>
            All features are supported.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.IFeaturesAware">
            <summary>
            Permits an implementation class to define the <see cref="T:Spring.Web.Support.Features"/>
            that it supports.
            </summary>
            <remarks>
            <p>
            Used to optimize the request execution for implementing classes.
            </p>
            </remarks>
            <see cref="T:Spring.Web.Support.Features"/>
        </member>
        <member name="P:Spring.Web.Support.IFeaturesAware.SupportedFeatures">
            <summary>
            Gets or sets the <see cref="T:Spring.Web.Support.Features"/> that
            an implementation supports.
            </summary>
            <value>
            The <see cref="T:Spring.Web.Support.Features"/> that an implementation
            supports.
            </value>
        </member>
        <member name="T:Spring.Web.Support.PageHandlerFactory">
            <summary>
            Implementation of <see cref="T:System.Web.IHttpHandlerFactory"/> that retrieves
            configured <see cref="T:System.Web.IHttpHandler"/> instances from Spring web application context.
            </summary>
            <remarks>
            <para>
            This handler factory uses page name from the URL, without the extension,
            to find handler object in the Spring context. This means that the target object 
            definition doesn't need to resolve to an .aspx page -- it can be any valid 
            object that implements <see cref="T:System.Web.IHttpHandler"/> interface.
            </para>
            <para>
            If the specified page is not found in the Spring application context, this
            handler factory falls back to the standard ASP.NET behavior and tries 
            to find physical page with a given name.
            </para>
            <para>
            In either case, handlers that implement <see cref="T:Spring.Context.IApplicationContextAware"/>
            and <see cref="T:Spring.Web.Support.ISharedStateAware"/> will be provided with the references
            to appropriate Spring.NET application context (based on the request URL) 
            and a <see cref="T:System.Collections.IDictionary"/> that should be used to store the information
            that needs to be shared by all instances of the handler.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: PageHandlerFactory.cs,v 1.14 2006/03/13 11:57:48 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Retrieves instance of the configured page from Spring web application context, 
            or if page is not defined in Spring config file tries to find it using standard
            ASP.Net mechanism.
            </summary>
            <param name="context">Current HttpContext</param>
            <param name="requestType">Type of HTTP request (GET, POST, etc.)</param>
            <param name="url">Requested page URL</param>
            <param name="path">Translated server path for the page</param>
            <returns>Instance of the IHttpHandler object that should be used to process request.</returns>
        </member>
        <member name="T:Spring.Web.Support.PageHandler">
            <summary>
            Wrapper for handlers that do not require <see cref="T:System.Web.SessionState.HttpSessionState"/>.
            </summary>
            <remarks>
            NOTE: This class has to extend System.Web.UI.Page instead of simply 
            implementing IHttpHandler in order for Server.Transfer to work properly.
            This in turn requires explicit IHttpHandler implementation in order to
            override non-virtual methods from the base Page class.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.PageHandler.#ctor(Spring.Context.IApplicationContext,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.PageHandler"/> class.
            </summary>
            <param name="appContext">Application context instance to retrieve page from.</param>
            <param name="pageName">Name of the page object to execute.</param>
            <param name="url">Requested page URL.</param>
            <param name="path">Translated server path for the page.</param>
        </member>
        <member name="M:Spring.Web.Support.PageHandler.#ctor(Spring.Context.IApplicationContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.PageHandler"/> class.
            </summary>
            <param name="appContext">Application context instance to retrieve page from.</param>
            <param name="pageName">Name of the page object to execute.</param>
        </member>
        <member name="M:Spring.Web.Support.PageHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
            <summary>
            Creates instance of the page and delegates call to it.
            </summary>
            <param name="context">HttpContext of the current page request.</param>
        </member>
        <member name="P:Spring.Web.Support.PageHandler.System#Web#IHttpHandler#IsReusable">
            <summary>
            Returns true because this wrapper handler can be reused.
            Actual page is instantiated at the beginning of the ProcessRequest method.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.PageHandler.HandlerState">
            <summary>
            Gets <see cref="T:System.Collections.IDictionary"/> that contains handler state. 
            </summary>
            <remarks>
            This <see cref="T:System.Collections.IDictionary"/> will be assigned to the <c>SharedState</c>
            property of <see cref="T:System.Web.IHttpHandler"/> instances that implement
            <see cref="T:Spring.Web.Support.ISharedStateAware"/> interface.
            </remarks>
        </member>
        <member name="T:Spring.Web.Support.SessionAwarePageHandler">
            <summary>
            Wrapper for handlers that require <see cref="T:System.Web.SessionState.HttpSessionState"/>.
            </summary>
            <remarks>
            Delays page object instantiation until ProcessRequest is called
            in order to be able to access session state.
            </remarks>
        </member>
        <member name="M:Spring.Web.Support.SessionAwarePageHandler.#ctor(Spring.Context.IApplicationContext,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.SessionAwarePageHandler"/> class.
            </summary>
            <param name="appContext">Application context instance to retrieve page from.</param>
            <param name="pageName">Name of the page object to execute.</param>
            <param name="url">Requested page URL.</param>
            <param name="path">Translated server path for the page.</param>
        </member>
        <member name="M:Spring.Web.Support.SessionAwarePageHandler.#ctor(Spring.Context.IApplicationContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Spring.Web.Support.SessionAwarePageHandler"/> class.
            </summary>
            <param name="appContext">Application context instance to retrieve page from.</param>
            <param name="pageName">Name of the page object to execute.</param>
        </member>
        <member name="T:Spring.Web.Support.Result">
            <summary>
            Represents the ASPX result page that an operation maps to.
            </summary>
            <remarks>
            <p>
            Parameters can reference variables accessible from the page using the
            standard NAnt style property notation, namely <c>${varName}</c>.
            </p>
            <p>
            The <c>result</c> <see cref="T:System.String"/> that is passed as the sole
            parameter to the parameterized constructor
            (<see cref="M:Spring.Web.Support.Result.#ctor(System.String)"/>) must adhere to the
            following format:
            </p>
            <code>
            [&lt;mode&gt;:]&lt;targetPage&gt;[?param1,param2,...,paramN]
            </code>
            <p>
            Only the <c>targetPage</c> is mandatory.
            </p>
            </remarks>
            <example>
            <p>
            Examples of valid <see cref="T:System.String"/> values that can be passed
            to the the parameterized constructor
            (<see cref="M:Spring.Web.Support.Result.#ctor(System.String)"/>) include:
            </p>
            <p>
            <list type="bullet">
            <item><description>Login.aspx</description></item>
            <item><description>~/Login.aspx</description></item>
            <item><description>redirect:~/Login.aspx</description></item>
            <item><description>transfer:~/Login.aspx</description></item>
            <item><description>transfer:Services/Register.aspx</description></item>
            <item><description>Login.aspx?username=springboy,password=7623AAjoe</description></item>
            <item><description>redirect:Login.aspx?username=springboy,password=7623AAjoe</description></item>
            </list>
            </p>
            </example>
            <author>Aleksandar Seovic</author>
            <author>Matan Shapira</author>
            <version>$Id: Result.cs,v 1.9 2006/02/21 07:22:52 aseovic Exp $</version>
        </member>
        <member name="F:Spring.Web.Support.Result.DefaultResultMode">
            <summary>
            The default <see cref="T:Spring.Web.Support.ResultMode"/>.
            </summary>
            <remarks>
            <p>
            Currently defaults to <see cref="F:Spring.Web.Support.ResultMode.Transfer"/>.
            </p>
            </remarks>
            <seealso cref="T:Spring.Web.Support.ResultMode"/>
        </member>
        <member name="M:Spring.Web.Support.Result.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Support.Result"/> class.
            </summary>
        </member>
        <member name="M:Spring.Web.Support.Result.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Spring.Web.Support.Result"/> class.
            </summary>
            <remarks>
            <p>
            See both the class documentation (<see cref="T:Spring.Web.Support.Result"/>)
            and the reference documentation for the Spring.Web library for a
            discussion and examples of what values the supplied <paramref name="result"/>
            can have.
            </p>
            </remarks>
            <param name="result">The result descriptor.</param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="result"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
        </member>
        <member name="M:Spring.Web.Support.Result.Navigate(System.Object)">
            <summary>
            Navigates to the <see cref="P:Spring.Web.Support.Result.TargetPage"/>
            defined by this result.
            </summary>
            <param name="page">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
        </member>
        <member name="M:Spring.Web.Support.Result.DoTransfer(System.Object)">
            <summary>
            Performs a server-side transfer to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this result.
            </summary>
            <param name="page">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
            <seealso cref="M:System.Web.HttpServerUtility.Transfer(System.String)"/>
        </member>
        <member name="M:Spring.Web.Support.Result.DoRedirect(System.Object)">
            <summary>
            Performs a redirect to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> defined by this
            result.
            </summary>
            <param name="page">
            The context object for parameter resolution. This is typically
            a <see cref="T:System.Web.UI.Page"/>.
            </param>
            <seealso cref="M:System.Web.HttpResponse.Redirect(System.String)"/>
        </member>
        <member name="M:Spring.Web.Support.Result.ExtractAndSetResultMode(System.String)">
            <summary>
            Extracts and sets this instance's <see cref="P:Spring.Web.Support.Result.Mode"/>
            property from the supplied <paramref name="result"/> descriptor.
            </summary>
            <remarks>
            <p>
            The supplied <paramref name="result"/> descriptor is typically
            something like <c>/Foo.aspx</c> or
            <c>redirect:http://www.springframework.net/</c>.
            </p>
            </remarks>
            <param name="result">
            The result descriptor.
            </param>
            <returns>
            The supplied <paramref name="result"/> without the result mode
            prefix (if any).
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the supplied <paramref name="result"/> starts with an illegal
            result mode (see <see cref="T:Spring.Web.Support.ResultMode"/>).
            </exception>
        </member>
        <member name="M:Spring.Web.Support.Result.ParseParameters(System.String)">
            <summary>
            Parses query parameters from the supplied <paramref name="queryString"/>.
            </summary>
            <param name="queryString">
            The query string (may be <cref lang="null"/>).
            </param>
        </member>
        <member name="P:Spring.Web.Support.Result.Mode">
            <summary>
            The <see cref="T:Spring.Web.Support.ResultMode"/>. Defines which
            method will be used to navigate to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/>.
            </summary>
        </member>
        <member name="P:Spring.Web.Support.Result.TargetPage">
            <summary>
            The target page.
            </summary>
            <remarks>
            <p>
            This is the (relative) path to the target page. 
            </p>
            </remarks>
            <example>
            <p>
            Examples of valid values would be:
            </p>
            <p>
            <list type="bullet">
            <item><description>Login.aspx</description></item>
            <item><description>~/Login.aspx</description></item>
            <item><description>~/B2B/SignUp.aspx</description></item>
            <item><description>B2B/Foo/FooServices.aspx</description></item>
            </list>
            </p>
            </example>
        </member>
        <member name="P:Spring.Web.Support.Result.Parameters">
            <summary>
            The parameters thar are to be passed to the
            <see cref="P:Spring.Web.Support.Result.TargetPage"/> upon
            navigation.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ResultMode">
            <summary>
            The various result modes.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: ResultMode.cs,v 1.1 2005/09/24 23:35:59 springboy Exp $</version>
            <seealso cref="T:Spring.Web.Support.Result"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.Transfer">
            <summary>
            A server-side transfer.
            </summary>
            <remarks>
            <p>
            Issues a server-side transfer using the
            <see cref="M:System.Web.HttpServerUtility.Transfer(System.String)"/> method.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpServerUtility.Transfer(System.String)"/>
        </member>
        <member name="F:Spring.Web.Support.ResultMode.Redirect">
            <summary>
            A redirect.
            </summary>
            <remarks>
            <p>
            Issues a redirect (to the user-agent - typically a browser) using
            the <see cref="M:System.Web.HttpResponse.Redirect(System.String)"/> method.
            </p>
            </remarks>
            <seealso cref="M:System.Web.HttpResponse.Redirect(System.String)"/>
        </member>
        <member name="T:Spring.Web.Support.Script">
            <summary>
            Base class that describes client side script block or file.
            </summary>
            <remarks>
            <p>
            Classes that extend this class are used by Spring.Web client-side
            scripting support.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Script.cs,v 1.2 2005/10/11 05:08:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.Script.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="language">Script language.</param>
        </member>
        <member name="P:Spring.Web.Support.Script.Language">
            <summary>
            Gets or sets script language.
            </summary>
        </member>
        <member name="T:Spring.Web.Support.ScriptBlock">
            <summary>
            Class that describes client side script block.
            </summary>
            <remarks>
            <p>
            Script blocks are used to insert script code directly into the page,
            without references to an external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Script.cs,v 1.2 2005/10/11 05:08:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.ScriptBlock.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="language">Script language.</param>
            <param name="script">The script text.</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptBlock.Script">
            <summary>
            Gets or sets the script text.
            </summary>
            <value>The script text.</value>
        </member>
        <member name="T:Spring.Web.Support.ScriptFile">
            <summary>
            Class that describes client side script file.
            </summary>
            <remarks>
            <p>
            Script file references script code in the external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Script.cs,v 1.2 2005/10/11 05:08:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.ScriptFile.#ctor(System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="language">Script language.</param>
            <param name="fileName">The name of the script file.</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptFile.FileName">
            <summary>
            Gets or sets the name of the script file.
            </summary>
            <value>The name of the script file.</value>
        </member>
        <member name="T:Spring.Web.Support.ScriptEvent">
            <summary>
            Class that describes client side script file.
            </summary>
            <remarks>
            <p>
            Script file references script code in the external file.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Script.cs,v 1.2 2005/10/11 05:08:36 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Support.ScriptEvent.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="language">Script language.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="P:Spring.Web.Support.ScriptEvent.Element">
            <summary>
            Gets or sets the element ID.
            </summary>
            <value>The element ID.</value>
        </member>
        <member name="P:Spring.Web.Support.ScriptEvent.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>The name of the event.</value>
        </member>
        <member name="T:Spring.Web.UI.Controls.Calendar">
            <summary>
            Displays a pop-up DHTML calendar.
            </summary>
            <remarks>
            <p>
            Credit: this control uses a slightly modified version of the 
            <a href="http://www.dynarch.com/projects/calendar/">Dynarch.com DHTML Calendar</a>,
            written by Mihai Bazon.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Calendar.cs,v 1.9 2006/03/13 11:57:49 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.OnPreRender(System.EventArgs)">
            <summary>
            Registers necessary scripts and stylesheet.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> object that contains the event data.
            </param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders a hidden input field that stores the value for the radio button group.
            </summary>
            <param name="writer">
            <see cref="T:System.Web.UI.HtmlTextWriter"/> to use for rendering.
            </param>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.RaisePostDataChangedEvent">
            <summary>
            Raises the <c>SelectionChanged</c> event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Loads postback data into the control.
            </summary>
            <param name="postDataKey">
            The key that should be used to retrieve data.
            </param>
            <param name="postCollection">The postback data collection.</param>
            <returns><see lang="true"/> if data has changed.</returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.Calendar.OnDateChanged(System.EventArgs)">
            <summary>
            The method that is called on postback if the date has changed.
            </summary>
            <param name="e">
            The event argument (empty and unused).
            </param>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value>
            A reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.SelectedDate">
            <summary>
            The selected date.
            </summary>
            <value>The selected date.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Format">
            <summary>
            The date format that is to be used.
            </summary>
            <value>A valid date format string.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.AllowEditing">
            <summary>
            Is direct editing of the date allowed?
            </summary>
            <value>
            <see lang="true"/> if direct editing of the date is allowed?</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.Calendar.Skin">
            <summary>
            The (CSS) style.
            </summary>
            <value>The style for the calendar.</value>
        </member>
        <member name="E:Spring.Web.UI.Controls.Calendar.DateChanged">
            <summary>
            Occurs when the value of the radio button group changes between postbacks to the server.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.Content">
            <summary>
            Represents Content control that can be used to populate or override placeholders
            within the master page.
            </summary>
            <remarks>
            Any content defined within this control will override default content 
            in the matching <see cref="T:Spring.Web.UI.Controls.ContentPlaceHolder"/> control
            within the master page
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Content.cs,v 1.2 2005/12/04 02:50:02 aseovic Exp $</version>
        </member>
        <member name="P:Spring.Web.UI.Controls.Content.ContentPlaceHolderId">
            <summary>
            Id of the <see cref="T:Spring.Web.UI.Controls.ContentPlaceHolder"/> to override.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.ContentPlaceHolder">
            <summary>
            Represents ContentPlaceHolder control that can be used to define placeholders
            within the master page.
            </summary>
            <remarks>
            Any content defined within this control will be treated as a default content 
            for the placeholder and will be rendered unless the child page overrides it
            by defining matching <see cref="T:Spring.Web.UI.Controls.Content"/> control.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: ContentPlaceholder.cs,v 1.4 2006/02/22 11:15:27 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.ContentPlaceHolder.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders either its own (default) content or content defined if the associated
            <see cref="T:Spring.Web.UI.Controls.Content"/> control.
            </summary>
            <param name="writer">HtmlTextWriter that should be used for output</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.ContentPlaceHolder.Content">
            <summary>
            Association to content control defined in the child page
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.Head">
            <summary>
            This control should be used instead of standard HTML <c>head</c> tag
            in order to render dynamicaly registered head scripts and stylesheets.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: Head.cs,v 1.2 2005/10/11 05:20:44 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.Head.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"/> object, which writes the content to
            be rendered on
            the client.
            </summary>
            <param name="writer">The <see langword="HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.Head.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.Controls.LocalizedImage">
            <summary>
            This control should be used instead of standard HTML <c>head</c> tag
            in order to render dynamicaly registered head scripts and stylesheets.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: LocalizedImage.cs,v 1.3 2005/10/21 02:13:19 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.LocalizedImage.OnPreRender(System.EventArgs)">
            <summary>
            Tries to determine full URL for the localized image before it's rendered.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.LocalizedImage.ImageName">
            <summary>
            Name of the image file.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Controls.LocalizedImage.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.Controls.RadioButtonGroup">
            <summary>
            Groups radio button controls and returns the value of the selected control
            </summary>
            <remarks>
            This control alows radio buttons to be data-bound to a data model of the page.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: RadioButtonGroup.cs,v 1.3 2005/11/27 04:24:24 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.OnInit(System.EventArgs)">
            <summary>
            Initializes radio button group.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders hidden input field that stores value for the radio button group.
            </summary>
            <param name="writer">HtmlTextWriter to use for rendering.</param>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.RaisePostDataChangedEvent">
            <summary>
            Raises SelectionChanged event.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Loads postback data into the control.
            </summary>
            <param name="postDataKey">Key that should be used to retrieve data.</param>
            <param name="postCollection">Postback data collection.</param>
            <returns>True if data has changed, false otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Controls.RadioButtonGroup.OnSelectionChanged(System.EventArgs)">
            <summary>
            Method that is called on postback if selected radio button has changed.
            </summary>
            <param name="e">Empty event argument.</param>
        </member>
        <member name="P:Spring.Web.UI.Controls.RadioButtonGroup.Value">
            <summary>
            Gets or sets the ID of the selected radio button.
            </summary>
            <value>ID of the selected radio button.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.RadioButtonGroup.AutoPostBack">
            <summary>
            Gets or sets whether form should be posted back on every selection change
            within the radio group.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Controls.RadioButtonGroup.SelectionChanged">
            <summary>
            Occurs when the value of the radio button group changes between postbacks to the server.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.Controls.ValidationError">
            <summary>
            This control should be used to display field-level validation errors.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: ValidationError.cs,v 1.6 2006/03/13 11:57:51 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.ValidationError.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders control. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationError.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationError.Renderer">
            <summary>
            Gets or sets the validation errors renderer to use. 
            </summary>
            <remarks>
            If not explicitly specified, defaults to <see cref="T:Spring.Web.Validation.SpanValidationErrorsRenderer"/>.
            </remarks>
            <value>The validation errors renderer to use.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationError.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.Controls.ValidationSummary">
            <summary>
            This control should be used instead of standard ValidationSummary control
            to display validation errors identified by the Spring.NET validation framework.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: ValidationSummary.cs,v 1.6 2006/03/13 11:57:51 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Controls.ValidationSummary.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders control. 
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationSummary.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationSummary.Renderer">
            <summary>
            Gets or sets the validation errors renderer to use. 
            </summary>
            <remarks>
            If not explicitly specified, defaults to <see cref="T:Spring.Web.Validation.DivValidationErrorsRenderer"/>.
            </remarks>
            <value>The validation errors renderer to use.</value>
        </member>
        <member name="P:Spring.Web.UI.Controls.ValidationSummary.Page">
            <summary>
            Gets a reference to the <see cref="T:Spring.Web.UI.Page"/> instance that contains the
            server control.
            </summary>
            <value></value>
        </member>
        <member name="T:Spring.Web.UI.AbstractWizard">
            <summary>
            Convinience implementation of the wizard-like page controller.
            </summary>
            <remarks>
            <p>
            Wizard steps are encapsulated within custom user controls. Wizard
            controller takes care of navigation through steps and loading of the 
            appropriate user control.
            </p>
            <p>
            Developer implementing wizard needs to inherit from this class and implement
            abstract, read-only StepPanel property that will be used as a container
            for the wizard steps. Navigation event handlers should call Previous and Next methods
            from this class to change current step.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: AbstractWizard.cs,v 1.6 2006/03/13 11:57:49 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Web.UI.Page">
            <summary>
            Represents an .aspx file, also known as a Web Forms page, requested from a 
            server that hosts an ASP.NET Web application.
            </summary>
            <remarks>
            <p>
            The <b>Page</b> class is associated with files that have an .aspx extension. 
            These files are compiled at run time as Page objects and cached in server memory.
            </p>
            <p>
            This class extends <see cref="T:System.Web.UI.Page"/> and adds support for master 
            pages similar to upcoming ASP.Net 2.0 master pages feature.
            </p>
            <p>
            It also adds support for automatic localization using local page resource file, and 
            simplifies access to global resources (resources from the message source for the 
            application context).
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: Page.cs,v 1.49 2006/04/05 23:38:22 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.Page.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the request.
            </summary>
            <param name="context">The HTTP context.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnPreInit(System.EventArgs)">
            <summary>
            Initializes Spring.NET page internals and raises the PreInit event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeCulture">
            <summary>
            Initializes the culture.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnInit(System.EventArgs)">
            <summary>
            Initializes data model and controls.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnLoad(System.EventArgs)">
            <summary>
            Initializes dialog result and unbinds data from the controls
            into a data model.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnPreRender(System.EventArgs)">
            <summary>
            Binds data from the data model into controls and raises
            PreRender event afterwards.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnInitializeControls(System.EventArgs)">
            <summary>
            Raises InitializeControls event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.LoadControl(System.String)">
            <summary>
            Obtains a <see cref="T:System.Web.UI.UserControl"/> object from a user control file
            and injects dependencies according to Spring config file.
            </summary>
            <param name="virtualPath">The virtual path to a user control file.</param>
            <returns>
            Returns the specified <see langword="UserControl"/> object, with dependencies injected.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.InjectDependenciesRecursive(System.Web.UI.Control)">
            <summary>
            Injects dependencies into all controls in the hierarchy 
            based on template definitions in the Spring config file.
            </summary>
            <param name="control">Control to inject dependencies into.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders this page, taking master page into account.
            </summary>
            <param name="writer">The <see langword="HtmlTextWriter"/> object that receives the server control content.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterStyle(System.String,System.String)">
            <summary>
            Registers single CSS style with the page.
            </summary>
            <param name="name">Style name.</param>
            <param name="style">Style definition.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsStyleRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified style is registered, <c>False</c> otherwise.
            </summary>
            <param name="name">Style name.</param>
            <returns><c>True</c> if specified style is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterStyleFile(System.String,System.String)">
            <summary>
            Registers CSS file with the page.
            </summary>
            <param name="key">Style file key.</param>
            <param name="fileName">Style file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsStyleFileRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified style file is registered, <c>False</c> otherwise.
            </summary>
            <param name="key">Style file key.</param>
            <returns><c>True</c> if specified style file is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptBlock(System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptBlock(System.String,System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="language">Script language.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptFile(System.String,System.String)">
            <summary>
            Registers script file that should be referenced within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="fileName">Script file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptFile(System.String,System.String,System.String)">
            <summary>
            Registers script file that should be referenced within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="language">Script language.</param>
            <param name="fileName">Script file name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptEvent(System.String,System.String,System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.RegisterHeadScriptEvent(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Registers script block that should be rendered within the <c>head</c> HTML element.
            </summary>
            <param name="key">Script key.</param>
            <param name="language">Script language.</param>
            <param name="element">Element ID of the event source.</param>
            <param name="eventName">Name of the event to handle.</param>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.IsHeadScriptRegistered(System.String)">
            <summary>
            Returns <c>True</c> if specified head script is registered, <c>False</c> otherwise.
            </summary>
            <param name="key">Script key.</param>
            <returns><c>True</c> if specified head script is registered, <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.SetResult(System.String)">
            <summary>
            Redirects user to a URL mapped to specified result name.
            </summary>
            <param name="resultName">Result name.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.Validate(System.Object,Spring.Validation.IValidator[])">
            <summary>
            Evaluates specified validators and returns <c>True</c> if all of them are valid.
            </summary>
            <remarks>
            <p>
            Each validator can itself represent a collection of other validators if it is
            an instance of <see cref="T:Spring.Validation.ValidatorGroup"/> or one of its derived types. 
            </p>
            <p>
            Please see the Validation Framework section in the documentation for more info.
            </p>
            </remarks>
            <param name="validationContext">Object to validate.</param>
            <param name="validators">Validators to evaluate.</param>
            <returns>
            <c>True</c> if all of the specified validators are valid, <c>False</c> otherwise.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.CreateValidatorParameters">
            <summary>
            Creates the validator parameters.
            </summary>
            <remarks>
            <para>
            This method can be overriden if you want to pass additional parameters
            to the validation framework, but you should make sure that you call 
            this base implementation in order to add page, session, application,
            request, response and context to the variables collection.
            </para>
            </remarks>
            <returns>
            Dictionary containing parameters that should be passed to
            the data validation framework.
            </returns>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeDataBindings">
            <summary>
            Initializes the data bindings.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeBindingManager">
            <summary>
            Initializes binding manager and data bindings if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.OnDataBound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.OnDataUnbound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.InitializeMessageSource">
            <summary>
            Initializes local message source
            </summary>
        </member>
        <member name="M:Spring.Web.UI.Page.GetLocalResourceManager">
            <summary>
            Creates and returns local ResourceManager for this page.
            </summary>
            <remarks>
            <para>
            In ASP.NET 1.1, this method loads local resources from the web application assembly.
            </para>
            <para>
            However, in ASP.NET 2.0, local resources are compiled into a dynamic assembly, 
            so we need to find that assembly and load the resources from it.
            </para>
            </remarks>
            <returns>Local ResourceManager instance.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetMessage(System.String)">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetMessage(System.String,System.Object[])">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <param name="args">Message arguments that will be used to format return value.</param>
            <returns>Formatted message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.GetResourceObject(System.String)">
            <summary>
            Returns resource object for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Resource object.</returns>
        </member>
        <member name="M:Spring.Web.UI.Page.OnUserCultureChanged(System.EventArgs)">
            <summary>
            Raises UserLocaleChanged event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.Page.CreateSharedStateKey(System.String)">
            <summary>
            Creates a key for shared state, taking into account whether 
            this page belongs to a process or not.
            </summary>
            <param name="key">Key suffix</param>
            <returns>Generated unique shared state key.</returns>
        </member>
        <member name="E:Spring.Web.UI.Page.PreInit">
            <summary>
            PreInit event.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.DesignMode">
            <summary>
            Gets a value indicating whether this instance is in design mode.
            </summary>
            <value>
            	<c>true</c> if this instance is in design mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Spring.Web.UI.Page.InitializeControls">
            <summary>
            This event is raised before Init event and should be used to initialize
            controls as necessary.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Process">
            <summary>
            Gets or sets the process that this page belongs to.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Controller">
            <summary>
            Gets or sets controller for the page.
            </summary>
            <remarks>
            <para>
            Application pages should shadow this property and change its type
            in order to make calls to controller within the page as simple as possible.
            </para>
            <para>
            If external controller is not specified, page will serve as its own controller,
            which will allow data binding to work properly.
            </para>
            </remarks>
            <value>Controller for the page. Defaults to the page itself.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.SharedState">
            <summary>
            Returns a thread-safe dictionary that contains state that is shared by 
            all instances of this page.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Master">
            <summary>
            Reference to a master page template. 
            </summary>
            <remarks>
            <p>
            Master page can be any user control that defines form element and one or more &lt;spring:ContentPlaceHolder/&gt; controls.
            Placeholders in the master page can contain default content that will be replaced by the content defined in child pages.
            </p>
            <p>
            Child pages should only define content they want to override using appropriate &lt;spring:Content/&gt; control
            that references appropriate content placeholder in the master page. Child pages don't have to define
            content elements for every placeholder in the master page. In that case, child page will simply inherit
            default content from the placeholder.
            </p>
            </remarks>
        </member>
        <member name="P:Spring.Web.UI.Page.MasterPageFile">
            <summary>
            Convinience property that allows users to specify master page using its file name
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.HasMaster">
            <summary>
            Returns true if page uses master page, false otherwise.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Styles">
            <summary>
            Gets a dictionary of registered styles.
            </summary>
            <value>Registered styles.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.StyleFiles">
            <summary>
            Gets a dictionary of registered style files.
            </summary>
            <value>Registered style files.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.HeadScripts">
            <summary>
            Gets a dictionary of registered head scripts.
            </summary>
            <value>Registered head scripts.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.CssRoot">
            <summary>
            Gets or sets the CSS root.
            </summary>
            <value>The CSS root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.ScriptsRoot">
            <summary>
            Gets or sets the scripts root.
            </summary>
            <value>The scripts root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.ImagesRoot">
            <summary>
            Gets or sets the images root.
            </summary>
            <value>The images root.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.Results">
            <summary>
            Gets or sets map of result names to target URLs
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.ValidationErrors">
            <summary>
            Gets the validation errors container.
            </summary>
            <value>The validation errors container.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.BindingManager">
            <summary>
            Gets the binding manager.
            </summary>
            <value>The binding manager.</value>
        </member>
        <member name="E:Spring.Web.UI.Page.DataBound">
            <summary>
            This event is raised after all controls have been populated with values
            from the data model.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.DataUnbound">
            <summary>
            This event is raised after data model has been populated with values from
            web controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.ApplicationContext">
            <summary>
            Gets or sets Spring application context of the page.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.Page.Localizer">
            <summary>
            Gets or sets the localizer.
            </summary>
            <value>The localizer.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.CultureResolver">
            <summary>
            Gets or sets the culture resolver.
            </summary>
            <value>The culture resolver.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.MessageSource">
            <summary>
            Gets or sets the local message source.
            </summary>
            <value>The local message source.</value>
        </member>
        <member name="P:Spring.Web.UI.Page.UserCulture">
            <summary>
            Gets or sets user's culture
            </summary>
        </member>
        <member name="E:Spring.Web.UI.Page.UserCultureChanged">
            <summary>
            This event is raised when the value of UserLocale property changes.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.Previous">
            <summary>
            Moves to the previous step in the list, if one exists.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.Next">
            <summary>
            Moves to the next step in the list, if one exists.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnInit(System.EventArgs)">
            <summary>
            Initializes wizard steps.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.OnPreRender(System.EventArgs)">
            <summary>
            Loads new step into a step panel if step has changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.InitializeSteps(System.Collections.IList)">
            <summary>
            Initializes all the steps.
            </summary>
            <param name="stepNames">List of step control names.</param>
            <returns>List of step control instances.</returns>
        </member>
        <member name="M:Spring.Web.UI.AbstractWizard.LoadStep(System.String)">
            <summary>
            Loads step control.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.Steps">
            <summary>
            Gets or sets a list of user controls representing wizard steps.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.CurrentStep">
            <summary>
            Gets or sets current step using step index.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.IsFirst">
            <summary>
            Returns true if there are no steps before the current step.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.IsLast">
            <summary>
            Returns true if there are no steps after the current step.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.AbstractWizard.StepPanel">
            <summary>
            Panel that should serve as a container for wizard steps.
            </summary>
        </member>
        <member name="T:Spring.Web.UI.DialogAttribute">
            <summary>
            Specifies that page should be treated as a dialog, meaning that after processing
            is over user should return to the referring page.
            </summary>
            <remarks>
            <p>
            Pages marked with this attribute will have "close" result predefined.
            </p>
            <p>
            Developers should call SetResult("close") from the event handler
            in order to return control back to the calling page.
            </p>
            </remarks>
            <author>Aleksandar Seovic</author>            <version>$Id: DialogAttribute.cs,v 1.1 2005/02/05 07:15:21 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Web.UI.MasterPage">
            <summary>
            Spring.NET Master Page implementation for ASP.NET 1.1
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: MasterPage.cs,v 1.4 2006/03/10 11:06:13 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Web.UI.UserControl">
            <summary>
            Extends standard .Net user control by adding data binding and localization functionality.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: UserControl.cs,v 1.27 2006/04/05 23:38:22 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.UI.UserControl.Construct">
            <summary>
            Initializes application context
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnInit(System.EventArgs)">
            <summary>
            Initializes user control.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnLoad(System.EventArgs)">
            <summary>
            First raises Load event in order to execute all associated handlers and
            then unbinds data from the controls into a data model.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnPreRender(System.EventArgs)">
            <summary>
            Binds data from the data model into controls and raises
            PreRender event afterwards.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnInitializeControls(System.EventArgs)">
            <summary>
            Raises InitializeControls event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeDataBindings">
            <summary>
            Initializes the data bindings.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeBindingManager">
            <summary>
            Initializes binding manager and data bindings if necessary.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnDataBound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.OnDataUnbound(System.EventArgs)">
            <summary>
            Raises DataBound event.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Spring.Web.UI.UserControl.InitializeMessageSource">
            <summary>
            Initializes local message source
            </summary>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetLocalResourceManager">
            <summary>
            Creates and returns local ResourceManager for this page.
            </summary>
            <remarks>
            <para>
            In ASP.NET 1.1, this method loads local resources from the web application assembly.
            </para>
            <para>
            However, in ASP.NET 2.0, local resources are compiled into the dynamic assembly, 
            so we need to find that assembly instead and load the resources from it.
            </para>
            </remarks>
            <returns>Local ResourceManager instance.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetMessage(System.String)">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetMessage(System.String,System.Object[])">
            <summary>
            Returns message for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <param name="args">Message arguments that will be used to format return value.</param>
            <returns>Formatted message text.</returns>
        </member>
        <member name="M:Spring.Web.UI.UserControl.GetResourceObject(System.String)">
            <summary>
            Returns resource object for the specified resource name.
            </summary>
            <param name="name">Resource name.</param>
            <returns>Resource object.</returns>
        </member>
        <member name="P:Spring.Web.UI.UserControl.DesignMode">
            <summary>
            Gets a value indicating whether this instance is in design mode.
            </summary>
            <value>
            	<c>true</c> if this instance is in design mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Spring.Web.UI.UserControl.InitializeControls">
            <summary>
            This event is raised before Load event and should be used to initialize
            controls as necessary.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.BindingManager">
            <summary>
            Gets the binding manager for this control.
            </summary>
            <value>The binding manager.</value>
        </member>
        <member name="E:Spring.Web.UI.UserControl.DataBound">
            <summary>
            This event is raised after all controls have been populated with values
            from the data model.
            </summary>
        </member>
        <member name="E:Spring.Web.UI.UserControl.DataUnbound">
            <summary>
            This event is raised after data model has been populated with values from
            web controls.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.ApplicationContext">
            <summary>
            Gets or sets Spring application context of the page.
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Localizer">
            <summary>
            Gets or sets the localizer.
            </summary>
            <value>The localizer.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.MessageSource">
            <summary>
            Gets or sets the local message source.
            </summary>
            <value>The local message source.</value>
        </member>
        <member name="P:Spring.Web.UI.UserControl.UserCulture">
            <summary>
            Gets or sets user's culture
            </summary>
        </member>
        <member name="P:Spring.Web.UI.UserControl.Page">
            <summary>
            Overrides Page property to return <see cref="T:Spring.Web.UI.Page"/> 
            instead of <see cref="T:System.Web.UI.Page"/>.
            </summary>
        </member>
        <member name="M:Spring.Web.UI.MasterPage.Initialize(Spring.Web.UI.Page)">
            <summary>
            Initializes master page.
            </summary>
        </member>
        <member name="T:Spring.Web.Validation.AbstractValidationErrorsRenderer">
            <summary>
            This class provides common members for all validation errors renderers.
            </summary>
            <author>Aleksandar Seovic</author>
            <version>$Id: AbstractValidationErrorsRenderer.cs,v 1.1 2006/02/15 04:04:05 aseovic Exp $</version>
        </member>
        <member name="T:Spring.Web.Validation.IValidationErrorsRenderer">
            <summary>
            This interface should be implemented by all validation errors renderers.
            </summary>
            <remarks>
            <para>
            Validation errors renderers are used to decouple rendering behavior from the 
            validation errors controls such as <see cref="T:Spring.Web.UI.Controls.ValidationError"/> and
            <see cref="T:Spring.Web.UI.Controls.ValidationSummary"/>.
            </para>
            <para>
            This allows users to change how validation errors are rendered by simply pluggin in
            appropriate renderer implementation into the validation errors controls using 
            Spring.NET dependency injection.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: IValidationErrorsRenderer.cs,v 1.1 2006/02/15 04:04:05 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Validation.IValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.IList)">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="M:Spring.Web.Validation.AbstractValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.IList)">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="P:Spring.Web.Validation.AbstractValidationErrorsRenderer.CssClass">
            <summary>
            Gets or sets the name of the CSS class that should be used.
            </summary>
            <value>
            The name of the CSS class that should be used
            </value>
        </member>
        <member name="T:Spring.Web.Validation.DivValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.Validation.IValidationErrorsRenderer"/> that renders
            validation errors within a <c>div</c> element, using breaks between the
            errors.
            </summary>
            <remarks>
            This renderer's behavior is consistent with standard ASP.NET behavior of
            the validation summary, and is used as default renderer for Spring.NET
            <see cref="T:Spring.Web.UI.Controls.ValidationSummary"/> control.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: DivValidationErrorsRenderer.cs,v 1.2 2006/03/13 11:57:51 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Validation.DivValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.IList)">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="T:Spring.Web.Validation.IconValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.Validation.IValidationErrorsRenderer"/> that 
            displays an error image to let user know there is an error, and
            tooltip to display actual error messages.
            </summary>
            <remarks>
            <para>
            This renderer's behavior is similar to Windows Forms error provider.
            </para>
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: IconValidationErrorsRenderer.cs,v 1.1 2006/02/15 04:04:05 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Validation.IconValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.IList)">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
        <member name="P:Spring.Web.Validation.IconValidationErrorsRenderer.IconSrc">
            <summary>
            Gets or sets the name of the image file to use as an error icon.
            </summary>
            <remarks>
            <para>
            Image name should be relative to the value of the <see cref="P:Spring.Web.UI.Page.ImagesRoot"/>
            property, and should not use leading path separator.
            </para>
            </remarks>
            <value>The name of the image file to use as an error icon.</value>
        </member>
        <member name="T:Spring.Web.Validation.SpanValidationErrorsRenderer">
            <summary>
            Implementation of <see cref="T:Spring.Web.Validation.IValidationErrorsRenderer"/> that renders
            validation errors within a <c>span</c> element, using breaks between the
            errors.
            </summary>
            <remarks>
            This renderer's behavior is consistent with standard ASP.NET behavior of
            the control validators, and is used as the default renderer for Spring.NET
            <see cref="T:Spring.Web.UI.Controls.ValidationError"/> control.
            </remarks>
            <author>Aleksandar Seovic</author>
            <version>$Id: SpanValidationErrorsRenderer.cs,v 1.1 2006/02/15 04:04:05 aseovic Exp $</version>
        </member>
        <member name="M:Spring.Web.Validation.SpanValidationErrorsRenderer.RenderErrors(Spring.Web.UI.Page,System.Web.UI.HtmlTextWriter,System.Collections.IList)">
            <summary>
            Renders validation errors using specified <see cref="T:System.Web.UI.HtmlTextWriter"/>.
            </summary>
            <param name="page">Web form instance.</param>
            <param name="writer">An HTML writer to use.</param>
            <param name="errors">The list of validation errors.</param>
        </member>
    </members>
</doc>
